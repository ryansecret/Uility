//------------------------------------------------------------------------------
// <auto-generated>
//    此代码是根据模板生成的。
//
//    手动更改此文件可能会导致应用程序中发生异常行为。
//    如果重新生成代码，则将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM 关系源元数据

[assembly: EdmRelationshipAttribute("Model", "FK_Events_Athletes", "Athletes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Wpf.Athletes), "Events", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Wpf.Events), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_Events_EventTypes", "EventTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Wpf.EventTypes), "Events", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Wpf.Events), true)]
[assembly: EdmRelationshipAttribute("Model", "FK_ReferenceTimes_EventTypes", "EventTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Wpf.EventTypes), "ReferenceTimes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Wpf.ReferenceTimes), true)]

#endregion

namespace Wpf
{
    #region 上下文
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    public partial class Entities : ObjectContext
    {
        #region 构造函数
    
        /// <summary>
        /// 请使用应用程序配置文件的“Entities”部分中的连接字符串初始化新 Entities 对象。
        /// </summary>
        public Entities() : base("name=Entities", "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 Entities 对象。
        /// </summary>
        public Entities(string connectionString) : base(connectionString, "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 Entities 对象。
        /// </summary>
        public Entities(EntityConnection connection) : base(connection, "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region 分部方法
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet 属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Athletes> Athletes
        {
            get
            {
                if ((_Athletes == null))
                {
                    _Athletes = base.CreateObjectSet<Athletes>("Athletes");
                }
                return _Athletes;
            }
        }
        private ObjectSet<Athletes> _Athletes;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Events> Events
        {
            get
            {
                if ((_Events == null))
                {
                    _Events = base.CreateObjectSet<Events>("Events");
                }
                return _Events;
            }
        }
        private ObjectSet<Events> _Events;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<EventTypes> EventTypes
        {
            get
            {
                if ((_EventTypes == null))
                {
                    _EventTypes = base.CreateObjectSet<EventTypes>("EventTypes");
                }
                return _EventTypes;
            }
        }
        private ObjectSet<EventTypes> _EventTypes;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<ReferenceTimes> ReferenceTimes
        {
            get
            {
                if ((_ReferenceTimes == null))
                {
                    _ReferenceTimes = base.CreateObjectSet<ReferenceTimes>("ReferenceTimes");
                }
                return _ReferenceTimes;
            }
        }
        private ObjectSet<ReferenceTimes> _ReferenceTimes;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<sysdiagrams> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagrams>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagrams> _sysdiagrams;

        #endregion

        #region AddTo 方法
    
        /// <summary>
        /// 用于向 Athletes EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToAthletes(Athletes athletes)
        {
            base.AddObject("Athletes", athletes);
        }
    
        /// <summary>
        /// 用于向 Events EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToEvents(Events events)
        {
            base.AddObject("Events", events);
        }
    
        /// <summary>
        /// 用于向 EventTypes EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToEventTypes(EventTypes eventTypes)
        {
            base.AddObject("EventTypes", eventTypes);
        }
    
        /// <summary>
        /// 用于向 ReferenceTimes EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToReferenceTimes(ReferenceTimes referenceTimes)
        {
            base.AddObject("ReferenceTimes", referenceTimes);
        }
    
        /// <summary>
        /// 用于向 sysdiagrams EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTosysdiagrams(sysdiagrams sysdiagrams)
        {
            base.AddObject("sysdiagrams", sysdiagrams);
        }

        #endregion

    }

    #endregion

    #region 实体
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Athletes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Athletes : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Athletes 对象。
        /// </summary>
        /// <param name="name">Name 属性的初始值。</param>
        public static Athletes CreateAthletes(global::System.String name)
        {
            Athletes athletes = new Athletes();
            athletes.Name = name;
            return athletes;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                if (_Name != value)
                {
                    OnNameChanging(value);
                    ReportPropertyChanging("Name");
                    _Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Name");
                    OnNameChanged();
                }
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Events_Athletes", "Events")]
        public EntityCollection<Events> Events
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Events>("Model.FK_Events_Athletes", "Events");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Events>("Model.FK_Events_Athletes", "Events", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Events")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Events : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Events 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="date">Date 属性的初始值。</param>
        /// <param name="athlete">Athlete 属性的初始值。</param>
        /// <param name="type">Type 属性的初始值。</param>
        /// <param name="swimTime">SwimTime 属性的初始值。</param>
        /// <param name="cycleTime">CycleTime 属性的初始值。</param>
        /// <param name="runTime">RunTime 属性的初始值。</param>
        /// <param name="overallTime">OverallTime 属性的初始值。</param>
        public static Events CreateEvents(global::System.Int32 id, global::System.DateTime date, global::System.String athlete, global::System.String type, global::System.TimeSpan swimTime, global::System.TimeSpan cycleTime, global::System.TimeSpan runTime, global::System.TimeSpan overallTime)
        {
            Events events = new Events();
            events.ID = id;
            events.Date = date;
            events.Athlete = athlete;
            events.Type = type;
            events.SwimTime = swimTime;
            events.CycleTime = cycleTime;
            events.RunTime = runTime;
            events.OverallTime = overallTime;
            return events;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Athlete
        {
            get
            {
                return _Athlete;
            }
            set
            {
                OnAthleteChanging(value);
                ReportPropertyChanging("Athlete");
                _Athlete = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Athlete");
                OnAthleteChanged();
            }
        }
        private global::System.String _Athlete;
        partial void OnAthleteChanging(global::System.String value);
        partial void OnAthleteChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.TimeSpan SwimTime
        {
            get
            {
                return _SwimTime;
            }
            set
            {
                OnSwimTimeChanging(value);
                ReportPropertyChanging("SwimTime");
                _SwimTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SwimTime");
                OnSwimTimeChanged();
            }
        }
        private global::System.TimeSpan _SwimTime;
        partial void OnSwimTimeChanging(global::System.TimeSpan value);
        partial void OnSwimTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.TimeSpan CycleTime
        {
            get
            {
                return _CycleTime;
            }
            set
            {
                OnCycleTimeChanging(value);
                ReportPropertyChanging("CycleTime");
                _CycleTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CycleTime");
                OnCycleTimeChanged();
            }
        }
        private global::System.TimeSpan _CycleTime;
        partial void OnCycleTimeChanging(global::System.TimeSpan value);
        partial void OnCycleTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.TimeSpan RunTime
        {
            get
            {
                return _RunTime;
            }
            set
            {
                OnRunTimeChanging(value);
                ReportPropertyChanging("RunTime");
                _RunTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RunTime");
                OnRunTimeChanged();
            }
        }
        private global::System.TimeSpan _RunTime;
        partial void OnRunTimeChanging(global::System.TimeSpan value);
        partial void OnRunTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.TimeSpan OverallTime
        {
            get
            {
                return _OverallTime;
            }
            set
            {
                OnOverallTimeChanging(value);
                ReportPropertyChanging("OverallTime");
                _OverallTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OverallTime");
                OnOverallTimeChanged();
            }
        }
        private global::System.TimeSpan _OverallTime;
        partial void OnOverallTimeChanging(global::System.TimeSpan value);
        partial void OnOverallTimeChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Events_Athletes", "Athletes")]
        public Athletes Athletes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Athletes>("Model.FK_Events_Athletes", "Athletes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Athletes>("Model.FK_Events_Athletes", "Athletes").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Athletes> AthletesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Athletes>("Model.FK_Events_Athletes", "Athletes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Athletes>("Model.FK_Events_Athletes", "Athletes", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Events_EventTypes", "EventTypes")]
        public EventTypes EventTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventTypes>("Model.FK_Events_EventTypes", "EventTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventTypes>("Model.FK_Events_EventTypes", "EventTypes").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EventTypes> EventTypesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventTypes>("Model.FK_Events_EventTypes", "EventTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EventTypes>("Model.FK_Events_EventTypes", "EventTypes", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="EventTypes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EventTypes : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 EventTypes 对象。
        /// </summary>
        /// <param name="name">Name 属性的初始值。</param>
        /// <param name="swimMiles">SwimMiles 属性的初始值。</param>
        /// <param name="cycleMiles">CycleMiles 属性的初始值。</param>
        /// <param name="runMiles">RunMiles 属性的初始值。</param>
        public static EventTypes CreateEventTypes(global::System.String name, global::System.Single swimMiles, global::System.Single cycleMiles, global::System.Single runMiles)
        {
            EventTypes eventTypes = new EventTypes();
            eventTypes.Name = name;
            eventTypes.SwimMiles = swimMiles;
            eventTypes.CycleMiles = cycleMiles;
            eventTypes.RunMiles = runMiles;
            return eventTypes;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                if (_Name != value)
                {
                    OnNameChanging(value);
                    ReportPropertyChanging("Name");
                    _Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Name");
                    OnNameChanged();
                }
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single SwimMiles
        {
            get
            {
                return _SwimMiles;
            }
            set
            {
                OnSwimMilesChanging(value);
                ReportPropertyChanging("SwimMiles");
                _SwimMiles = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SwimMiles");
                OnSwimMilesChanged();
            }
        }
        private global::System.Single _SwimMiles;
        partial void OnSwimMilesChanging(global::System.Single value);
        partial void OnSwimMilesChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single CycleMiles
        {
            get
            {
                return _CycleMiles;
            }
            set
            {
                OnCycleMilesChanging(value);
                ReportPropertyChanging("CycleMiles");
                _CycleMiles = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CycleMiles");
                OnCycleMilesChanged();
            }
        }
        private global::System.Single _CycleMiles;
        partial void OnCycleMilesChanging(global::System.Single value);
        partial void OnCycleMilesChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single RunMiles
        {
            get
            {
                return _RunMiles;
            }
            set
            {
                OnRunMilesChanging(value);
                ReportPropertyChanging("RunMiles");
                _RunMiles = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RunMiles");
                OnRunMilesChanged();
            }
        }
        private global::System.Single _RunMiles;
        partial void OnRunMilesChanging(global::System.Single value);
        partial void OnRunMilesChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Events_EventTypes", "Events")]
        public EntityCollection<Events> Events
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Events>("Model.FK_Events_EventTypes", "Events");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Events>("Model.FK_Events_EventTypes", "Events", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_ReferenceTimes_EventTypes", "ReferenceTimes")]
        public EntityCollection<ReferenceTimes> ReferenceTimes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ReferenceTimes>("Model.FK_ReferenceTimes_EventTypes", "ReferenceTimes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ReferenceTimes>("Model.FK_ReferenceTimes_EventTypes", "ReferenceTimes", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="ReferenceTimes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ReferenceTimes : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 ReferenceTimes 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="overallPos">OverallPos 属性的初始值。</param>
        /// <param name="overallTime">OverallTime 属性的初始值。</param>
        /// <param name="swimPos">SwimPos 属性的初始值。</param>
        /// <param name="swimTime">SwimTime 属性的初始值。</param>
        /// <param name="cyclePos">CyclePos 属性的初始值。</param>
        /// <param name="cycleTime">CycleTime 属性的初始值。</param>
        /// <param name="runPos">RunPos 属性的初始值。</param>
        /// <param name="runTime">RunTime 属性的初始值。</param>
        /// <param name="type">Type 属性的初始值。</param>
        public static ReferenceTimes CreateReferenceTimes(global::System.Int32 id, global::System.Int32 overallPos, global::System.TimeSpan overallTime, global::System.Int32 swimPos, global::System.TimeSpan swimTime, global::System.Int32 cyclePos, global::System.TimeSpan cycleTime, global::System.Int32 runPos, global::System.TimeSpan runTime, global::System.String type)
        {
            ReferenceTimes referenceTimes = new ReferenceTimes();
            referenceTimes.ID = id;
            referenceTimes.OverallPos = overallPos;
            referenceTimes.OverallTime = overallTime;
            referenceTimes.SwimPos = swimPos;
            referenceTimes.SwimTime = swimTime;
            referenceTimes.CyclePos = cyclePos;
            referenceTimes.CycleTime = cycleTime;
            referenceTimes.RunPos = runPos;
            referenceTimes.RunTime = runTime;
            referenceTimes.Type = type;
            return referenceTimes;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OverallPos
        {
            get
            {
                return _OverallPos;
            }
            set
            {
                OnOverallPosChanging(value);
                ReportPropertyChanging("OverallPos");
                _OverallPos = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OverallPos");
                OnOverallPosChanged();
            }
        }
        private global::System.Int32 _OverallPos;
        partial void OnOverallPosChanging(global::System.Int32 value);
        partial void OnOverallPosChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.TimeSpan OverallTime
        {
            get
            {
                return _OverallTime;
            }
            set
            {
                OnOverallTimeChanging(value);
                ReportPropertyChanging("OverallTime");
                _OverallTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OverallTime");
                OnOverallTimeChanged();
            }
        }
        private global::System.TimeSpan _OverallTime;
        partial void OnOverallTimeChanging(global::System.TimeSpan value);
        partial void OnOverallTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SwimPos
        {
            get
            {
                return _SwimPos;
            }
            set
            {
                OnSwimPosChanging(value);
                ReportPropertyChanging("SwimPos");
                _SwimPos = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SwimPos");
                OnSwimPosChanged();
            }
        }
        private global::System.Int32 _SwimPos;
        partial void OnSwimPosChanging(global::System.Int32 value);
        partial void OnSwimPosChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.TimeSpan SwimTime
        {
            get
            {
                return _SwimTime;
            }
            set
            {
                OnSwimTimeChanging(value);
                ReportPropertyChanging("SwimTime");
                _SwimTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SwimTime");
                OnSwimTimeChanged();
            }
        }
        private global::System.TimeSpan _SwimTime;
        partial void OnSwimTimeChanging(global::System.TimeSpan value);
        partial void OnSwimTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CyclePos
        {
            get
            {
                return _CyclePos;
            }
            set
            {
                OnCyclePosChanging(value);
                ReportPropertyChanging("CyclePos");
                _CyclePos = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CyclePos");
                OnCyclePosChanged();
            }
        }
        private global::System.Int32 _CyclePos;
        partial void OnCyclePosChanging(global::System.Int32 value);
        partial void OnCyclePosChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.TimeSpan CycleTime
        {
            get
            {
                return _CycleTime;
            }
            set
            {
                OnCycleTimeChanging(value);
                ReportPropertyChanging("CycleTime");
                _CycleTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CycleTime");
                OnCycleTimeChanged();
            }
        }
        private global::System.TimeSpan _CycleTime;
        partial void OnCycleTimeChanging(global::System.TimeSpan value);
        partial void OnCycleTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RunPos
        {
            get
            {
                return _RunPos;
            }
            set
            {
                OnRunPosChanging(value);
                ReportPropertyChanging("RunPos");
                _RunPos = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RunPos");
                OnRunPosChanged();
            }
        }
        private global::System.Int32 _RunPos;
        partial void OnRunPosChanging(global::System.Int32 value);
        partial void OnRunPosChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.TimeSpan RunTime
        {
            get
            {
                return _RunTime;
            }
            set
            {
                OnRunTimeChanging(value);
                ReportPropertyChanging("RunTime");
                _RunTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RunTime");
                OnRunTimeChanged();
            }
        }
        private global::System.TimeSpan _RunTime;
        partial void OnRunTimeChanging(global::System.TimeSpan value);
        partial void OnRunTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_ReferenceTimes_EventTypes", "EventTypes")]
        public EventTypes EventTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventTypes>("Model.FK_ReferenceTimes_EventTypes", "EventTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventTypes>("Model.FK_ReferenceTimes_EventTypes", "EventTypes").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EventTypes> EventTypesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventTypes>("Model.FK_ReferenceTimes_EventTypes", "EventTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EventTypes>("Model.FK_ReferenceTimes_EventTypes", "EventTypes", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="sysdiagrams")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagrams : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 sysdiagrams 对象。
        /// </summary>
        /// <param name="name">name 属性的初始值。</param>
        /// <param name="principal_id">principal_id 属性的初始值。</param>
        /// <param name="diagram_id">diagram_id 属性的初始值。</param>
        public static sysdiagrams Createsysdiagrams(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagrams sysdiagrams = new sysdiagrams();
            sysdiagrams.name = name;
            sysdiagrams.principal_id = principal_id;
            sysdiagrams.diagram_id = diagram_id;
            return sysdiagrams;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                Onprincipal_idChanging(value);
                ReportPropertyChanging("principal_id");
                _principal_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("principal_id");
                Onprincipal_idChanged();
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion

    
    }

    #endregion

    
}
