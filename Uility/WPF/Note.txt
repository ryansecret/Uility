附加属性主要就是为了调整位置

务必要知道，var 关键字不过是一个指令，它让编译器根据变量的初始化表达式推断类型；var 不是类型。 

框架（称为 Component Application Library (CAL)）用于：应用程序模块化：通过分离的组件构建应用程序。

UI 复合：使松散耦合的组件形成用户界面，而无需了解其余分离的应用程序部分。
服务位置：将水平服务（如日志记录和身份验证）与垂直服务（业务逻辑）分离开，使应用程序的分层更清晰。
模块化

在 CAL 中，这些工作单元中的每一个单元都是一个模块，CAL 需要一个可以与模块的启动行为通信的类，才能使用模块。该类还需要支持 IModule 接口。IModule 接口需要一个名为 Initialize 的方法，模块通过该方法可以对自己进行设置，以供应用程序的其余部分使用。

初始化后，此模块负责应用程序的日志记录实现。但是，如何加载此模块？
在使用 CAL 复合应用程序时，需要创建一个 ModuleCatalog，用于包含应用程序的所有模块。通过重写引导程序的 GetModuleCatalog 调用，可以创建此目录。在 Silverlight 中，可以使用代码或 XAML 填充此目录。
如果使用代码，则需要创建 ModuleCatalog 类的新实例，并使用模块填充该实例。

使用事件聚合器可以在模块之间进行通信，而不会导致紧密耦合。如果订阅从不发布的事件或发布从不订阅的事件，代码也不会失败。

Interoperability
GC.Collect();
            GC.WaitForPendingFinalizers();
            // GC needs to be called twice in order to get the Finalizers called 
            // - the first time in, it simply makes a list of what is to be 
            // finalized, the second time in, it actually is finalizing. Only 
            // then will the object do its automatic ReleaseComObject.
            GC.Collect();
            GC.WaitForPendingFinalizers();
